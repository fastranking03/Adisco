<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Adisco | CheckOut</title>
    <%- include('includes/head') %>
</head>

<body>
    <div>
        <%- include('includes/header') %>
            <div class="main">
                <section class="mt-20">

                    <div class="w-[1200px] mx-auto p-4 rounded-[10px]"
                        style="box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;">
                        <div class="mb-8 mt-5">
                            <h2 class="text-3xl font-[600]">CheckOut</h2>

                        </div>
                        <div class="flex mt-5 gap-10">
                            <div class="w-[60%]"></div>
                            <div class="w-[40%]">
                                <div class="shadow bg-white border-[1px] rounded-[10px] relative h-[600px]">
                                    <div class="p-3 mt-3">
                                        <p id="disDate" class="font-[700]"></p>
                                        <p id="disTime" class="font-[700] text-orange-400"></p>
                                    </div>
                                    <div class="mt-2" id="selected-services">

                                    </div>
                                    <div>
                                        <ul class="flex justify-between p-4">
                                            <li class="font-[600] text-[18px]">Total</li>
                                            <li class="font-[600] text-[20px]" id="total-amount"></li>
                                        </ul>
                                    </div>
                                    <div class="p-3 absolute w-[100%] bottom-2">
                                        <button class="bg-orange-500 p-3 w-[100%] rounded-[10px] font-[600] text-white"
                                            id="OrderNow">Order Now</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
    </div>
    <style>
        #orderModal {
            display: none;
        }
    </style>
    <!-- Contact Modal -->
    <div class="relative z-10" id="orderModal" aria-labelledby="modal-title" role="dialog" aria-modal="true">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
        <div class="fixed inset-0 z-10 w-screen overflow-y-auto">
            <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
                <div
                    class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all w-[800px]">
                    <div class="modal-header bg-gray-300 h-[80px] flex justify-between items-center px-5">

                        <div>
                            <h2 class="text-[25px] font-[600]">Your Detail</h2>
                        </div>
                        <div>
                            <button class="absolute right-4 top-7" id="closeModal"><svg
                                    xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20">
                                    <path fill="currentColor"
                                        d="M2.93 17.07A10 10 0 1 1 17.07 2.93A10 10 0 0 1 2.93 17.07m1.41-1.41A8 8 0 1 0 15.66 4.34A8 8 0 0 0 4.34 15.66m9.9-8.49L11.41 10l2.83 2.83l-1.41 1.41L10 11.41l-2.83 2.83l-1.41-1.41L8.59 10L5.76 7.17l1.41-1.41L10 8.59l2.83-2.83z" />
                                </svg></button>
                        </div>
                    </div>
                    <div class="mt-5 py-10">
                        <form class="mx-5">
                            <div class="flex gap-3">
                                <div class="w-[50%]">
                                    <div>
                                        <label for="name">Name</label>
                                        <input type="text" name="name" id="name"
                                            class="p-2 border-[1px] w-[100%] rounded-md outline-none mt-2" required />
                                    </div>
                                </div>
                                <div class="w-[50%]">
                                    <div>
                                        <label for="name">Email</label>
                                        <input type="text" name="email" id="email"
                                            class="p-2 border-[1px] w-[100%] rounded-md outline-none mt-2" required />
                                    </div>
                                </div>
                            </div>
                            <div class="flex gap-3 mt-5">
                                <div class="w-[50%]">
                                    <div>
                                        <label for="name">Phone No</label>
                                        <input type="text" name="phone" id="phone"
                                            class="p-2 border-[1px] w-[100%] rounded-md outline-none mt-2" required />
                                    </div>
                                </div>
                                <div class="w-[50%]">
                                    <div>
                                        <label for="name">Address</label>
                                        <input type="text" name="address" id="address"
                                            class="p-2 border-[1px] w-[100%] rounded-md outline-none mt-2" required />
                                    </div>
                                </div>
                            </div>
                            <div class="flex gap-3 mt-5">
                                <div class="w-[100%]">
                                    <label name="message">Message</label>
                                    <textarea class="p-2 border-[1px] w-[100%] rounded-md outline-none mt-2"
                                        name="message" id="message"></textarea>
                                </div>
                            </div>
                    </div>
                    <div class="bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
                        <button type="button" id="submitInfo"
                            class="inline-flex w-full justify-center rounded-md bg-orange-500 px-3 py-2 px-8 text-sm font-semibold text-white shadow-sm hover:bg-green-500 sm:ml-3 sm:w-auto">Submit</button>
                        <button type="button"
                            class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">Cancel</button>
                    </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Open the modal
            document.getElementById("orderNow").addEventListener("click", function () {

                document.getElementById('orderModal').style.display = 'block';
            });

            // Close the modal
            document.getElementById("closeModal").addEventListener("click", function () {
                document.getElementById('orderModal').style.display = 'none';
            });
        });
    </script>
 <script>
    document.addEventListener('DOMContentLoaded', function () {
        const selectedServices = JSON.parse(localStorage.getItem('selectedServices')) || [];
        const selectedServicesContainer = document.getElementById('selected-services');
        const totalAmount = document.getElementById("total-amount");
        const disTime = document.getElementById('disTime');
        const disDate = document.getElementById('disDate');

        const dateString = selectedServices[0].selectedDate;
        const [day, month, year] = dateString.split('-');
        const dateObject = new Date(`20${year}`, month - 1, day);

        // Format the date to "10 October 2024"
        const formattedDate = dateObject.toLocaleDateString('en-GB', {
            day: 'numeric',
            month: 'long',
            year: 'numeric',
        });

        let totalPrice = 0;
        selectedServices.forEach(service => {
            totalPrice += parseFloat(service.price);
            selectedServicesContainer.innerHTML +=
                `
                <div class="mb-3 border-b-1 border-b-[1px] pb-2">
                    <div class="p-2 flex justify-between ">
                        <div>
                            <p class="font-[400] text-[15px]">${service.name}</p>
                            <span class="text-[13px] text-gray-400 flex gap-2 items-center">${service.duration} <p class="getStaff font-[600] text-black text-[15px]"></p></span>
                        </div>
                        <h2 class="font-[600] text-[18px"> £${service.price}</h2>
                    </div>
                </div>
                `
        });

        disTime.textContent = `${selectedServices[0].selectedSlot}`;
        disDate.textContent = formattedDate;

        totalAmount.textContent = `£${totalPrice.toFixed(2)}`;

        // Select staff functionality
        const staffElements = document.querySelectorAll('.staff');
        const continueStaff = document.getElementById("continueStaff");

        staffElements.forEach(staffElement => {
            staffElement.addEventListener('click', function () {
                staffElements.forEach(elem => {
                    elem.classList.remove('border-orange-400');
                });

                this.classList.add('border-orange-400');

                const selectedStaff = JSON.parse(this.getAttribute('data-staff'));
                const selectedStaffName = selectedStaff.name;

                document.querySelectorAll('.getStaff').forEach(getStaff => {
                    getStaff.textContent = selectedStaffName;
                });

                const updatedServices = selectedServices.map(service => ({
                    ...service,
                    staff: {
                        id: selectedStaff.id,
                        name: selectedStaff.name,
                    }
                }));

                localStorage.setItem('selectedServices', JSON.stringify(updatedServices));
                continueStaff.classList.add('bg-orange-400', 'cursor-pointer');
            });

            continueStaff.addEventListener('click', function () {
                window.location.href = '/booking';
            });
        });

        // OrderNow button functionality inside DOMContentLoaded
        var OrderNow = document.getElementById("OrderNow");
        OrderNow.addEventListener('click', function () {
            const payload = {
                date: selectedServices[0].selectedDate, 
                slot: selectedServices[0].selectedSlot,
                services: selectedServices,
                totalAmount: totalPrice.toFixed(2),
            };

            fetch('/api/book-service', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(payload),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    localStorage.removeItem('selectedServices');
                    window.location.href = '/thank-you';
                } else {
                    alert('Error placing order. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    });
</script>

</body>

</html>